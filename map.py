import pygame as pg

_ = False
mini_map = [
  [10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,12,4 ,3 ,3 ,3 ,3 ,16,19,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,2 ,8],
  [10,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,10,_ ,_ ,_ ,_ ,_ ,_ ,_ ,19,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,3 ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,8],
  [10,_ ,_ ,3 ,3 ,3 ,3 ,_ ,_ ,_ ,2 ,2 ,2 ,_ ,_ ,_ ,10,_ ,_ ,_ ,_ ,_ ,_ ,_ ,19,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,3 ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,8],
  [10,_ ,_ ,_ ,_ ,_ ,4 ,_ ,_ ,_ ,_ ,_ ,2 ,_ ,_ ,_ ,10,_ ,_ ,_ ,_ ,_ ,_ ,_ ,19,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,3 ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,8],
  [10,_ ,_ ,_ ,_ ,_ ,6 ,_ ,_ ,_ ,_ ,_ ,2 ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,19,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,3 ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,8],
  [10,_ ,_ ,3 ,3 ,3 ,3 ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,3 ,4 ,6 ,_ ,_ ,_ ,_ ,19,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,3 ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,8 ,8 ,_ ,_ ,_ ,_ ,_ ,8],
  [10,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,10,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,3 ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,8],
  [10,_ ,_ ,_ ,4 ,_ ,_ ,_ ,4 ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,10,_ ,_ ,_ ,_ ,_ ,_ ,_ ,19,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,3 ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,8],
  [10,10,10,3 ,10,3 ,10,10,10,3 ,_ ,_ ,_ ,3 ,10,_ ,10,_ ,_ ,_ ,_ ,4 ,_ ,_ ,19,_ ,_ ,3 ,3 ,3 ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,9 ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,8],
  [10,10,10,10,10,10,10,10,10,3 ,_ ,_ ,_ ,3 ,10,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,19,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,7 ,_ ,3 ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,8],
  [10,10,10,10,10,10,10,10,10,3 ,_ ,_ ,_ ,17,10,_ ,_ ,_ ,12,_ ,_ ,_ ,_ ,_ ,19,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,7 ,3 ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,8],
  [10,10,17,10,10,10,10,10,10,17,_ ,_ ,_ ,17,10,_ ,_ ,14,_ ,_ ,_ ,_ ,_ ,_ ,19,_ ,_ ,_ ,_ ,_ ,_ ,_ ,3 ,3 ,3 ,7 ,4 ,3 ,3 ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,8],
  [10,4 ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,10,_ ,_ ,_ ,_ ,12,_ ,_ ,19,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,3 ,_ ,3 ,3 ,8 ,8 ,8 ,8 ,8 ,_ ,_ ,_ ,_ ,_ ,_ ,8],
  [17,_ ,_ ,9 ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,10,_ ,_ ,_ ,_ ,12,_ ,_ ,19,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,3 ,_ ,_ ,_ ,3 ,_ ,5 ,_ ,_ ,_ ,_ ,_ ,8 ,_ ,_ ,_ ,_ ,_ ,_ ,8],
  [10,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,10,_ ,_ ,_ ,16,_ ,_ ,_ ,19,_ ,_ ,_ ,_ ,3 ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,3 ,6 ,5 ,_ ,7 ,7 ,7 ,_ ,8 ,_ ,_ ,_ ,_ ,_ ,_ ,8],
  [10,_ ,_ ,2 ,_ ,_ ,_ ,_ ,_ ,17,4 ,_ ,_ ,4 ,17,_ ,10,_ ,_ ,_ ,17,_ ,_ ,_ ,19,_ ,_ ,_ ,_ ,3 ,_ ,_ ,_ ,_ ,_ ,3 ,_ ,_ ,_ ,_ ,_ ,_ ,5 ,_ ,8 ,_ ,_ ,8 ,_ ,_ ,_ ,_ ,_ ,8],
  [10,_ ,_ ,5 ,_ ,_ ,_ ,_ ,_ ,_ ,17,_ ,17,_ ,_ ,_ ,10,_ ,_ ,_ ,13,_ ,_ ,_ ,19,_ ,_ ,_ ,_ ,3 ,_ ,_ ,_ ,3 ,7 ,_ ,_ ,_ ,3 ,6 ,5 ,_ ,8 ,_ ,_ ,_ ,8 ,_ ,_ ,_ ,_ ,_ ,_ ,8],
  [15,_ ,_ ,2 ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,10,_ ,_ ,13,_ ,_ ,_ ,_ ,19,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,3 ,_ ,5 ,_ ,8 ,9 ,9 ,9 ,8 ,_ ,4 ,_ ,_ ,_ ,_ ,8],
  [15,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,10,_ ,_ ,_ ,_ ,_ ,_ ,_ ,19,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,6 ,_ ,5 ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,8],
  [15,_ ,_ ,4 ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,10,_ ,_ ,_ ,_ ,_ ,_ ,_ ,19,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,6 ,_ ,5 ,3 ,3 ,3 ,3 ,_ ,4 ,7 ,_ ,_ ,_ ,_ ,_ ,8],
  [10,_ ,_ ,_ ,_ ,_ ,_ ,_ ,7 ,_ ,_ ,6 ,_ ,_ ,_ ,_ ,10,_ ,_ ,_ ,_ ,_ ,_ ,_ ,19,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,6 ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,8],
  [10,10,17,17,_ ,_ ,17,17,10,17,17,10,3 ,10,10,_ ,10,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,6 ,_ ,_ ,_ ,_ ,_ ,8 ,8 ,8 ,_ ,_ ,_ ,_ ,_ ,_ ,8],
  [10,10,10,3 ,_ ,_ ,14,10,10,10,10,10,10,10,10,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,6 ,6 ,6 ,6 ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,8],
  [10,3 ,3 ,4 ,_ ,_ ,7 ,3 ,3 ,3 ,3 ,3 ,3 ,3 ,3 ,_ ,10,_ ,_ ,_ ,_ ,_ ,_ ,_ ,19,_ ,_ ,_ ,_ ,8 ,_ ,_ ,_ ,_ ,8 ,_ ,_ ,_ ,9 ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,8],
  [17,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,17,_ ,_ ,_ ,_ ,_ ,_ ,_ ,19,_ ,_ ,_ ,_ ,8 ,_ ,_ ,_ ,_ ,8 ,_ ,_ ,_ ,7 ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,8],
  [17,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,17,_ ,_ ,2 ,_ ,3 ,_ ,12,19,_ ,_ ,_ ,_ ,_ ,8 ,_ ,_ ,8 ,_ ,_ ,8 ,5 ,3 ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,7 ,7 ,7 ,_ ,_ ,_ ,_ ,8],
  [17,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,14,_ ,_ ,_ ,13,_ ,_ ,19,19,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,8 ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,7 ,_ ,_ ,_ ,_ ,_ ,_ ,8],
  [17,_ ,_ ,8 ,_ ,_ ,_ ,3 ,_ ,_ ,_ ,12,_ ,_ ,_ ,_ ,17,_ ,_ ,_ ,13,_ ,_ ,12,19,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,8 ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,8],
  [17,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,8 ,_ ,_ ,5 ,_ ,17,_ ,_ ,19,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,4 ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,8],
  [8 ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,8 ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,19,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,3 ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,_ ,8],
  [8 ,8 ,8 ,8 ,8 ,8 ,8 ,8 ,8 ,8 ,8 ,8 ,8 ,8 ,8 ,8 ,8 ,12,4 ,3 ,3 ,3 ,3 ,16,19,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,2 ,8]

]


class Map:
    def __init__(self, game):
        self.game = game
        self.mini_map = mini_map
        self.world_map = {}
        self.rows = len(self.mini_map)
        self.cols = len(self.mini_map[0])
        self.get_map()

    def get_map(self):
        for j, row in enumerate(self.mini_map):
            for i, value in enumerate(row):
                if value:
                    self.world_map[(i, j)] = value

    def draw(self):
        [pg.draw.rect(self.game.screen, 'darkgray', (pos[0] * 19, pos[1] * 19, 19, 19), 1)
         for pos in self.world_map]